name: Security Scan

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  security_scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'  # Set your Python version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run Bandit security scan
      run: |
        pip install bandit
        bandit -r . -o bandit-output.txt -f txt

    - name: Display Bandit results
      run: cat bandit-output.txt

    - name: Upload Bandit results as artifact
      uses: actions/upload-artifact@v4
      with:
        name: bandit-report
        path: bandit-output.txt

    - name: Check for Dockerfile
      id: check_dockerfile
      run: |
        if [ -f Dockerfile ]; then
          echo "Dockerfile exists."
          echo "build_docker=true" >> $GITHUB_ENV
        else
          echo "Dockerfile does not exist."
          echo "build_docker=false" >> $GITHUB_ENV
        fi

    - name: Build Docker image (if Dockerfile exists)
      if: env.build_docker == 'true'
      run: |
        docker build -t submission-image:latest .

    - name: Run Trivy scan on Docker image (if Dockerfile exists)
      if: env.build_docker == 'true'
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'image'
        image-ref: 'submission-image:latest'
        severity: 'HIGH,CRITICAL'
        ignore-unfixed: true
        format: 'table'
        exit-code: '1'
        output: 'trivy-docker-output.txt'

    - name: Display Trivy Docker image scan results
      if: env.build_docker == 'true'
      run: cat trivy-docker-output.txt || true

    - name: Upload Trivy Docker image scan results as artifact
      if: env.build_docker == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: trivy-docker-report
        path: trivy-docker-output.txt

    - name: Run Trivy vulnerability scan on file system (always run)
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        severity: 'HIGH,CRITICAL'
        ignore-unfixed: true
        format: 'table'
        exit-code: '1'
        output: 'trivy-output.txt'

    - name: Display Trivy file system scan results
      run: cat trivy-output.txt || true

    - name: Upload Trivy file system scan results as artifact
      uses: actions/upload-artifact@v4
      with:
        name: trivy-fs-report
        path: trivy-output.txt
